
## üîó **4. Documentaci√≥n de Endpoints (`endpoints.txt`)**

```text
ENDPOINTS DE LA API DE TIENDA WEB
==================================

BASE URL: http://localhost:5000

1. ENDPOINT DE BIENVENIDA
   ----------------------
   M√©todo: GET
   URL: /
   Descripci√≥n: Informaci√≥n general de la API y endpoints disponibles
   Response: JSON con informaci√≥n de la API

2. GESTI√ìN DE PRODUCTOS
   --------------------

   a) LISTAR PRODUCTOS
      M√©todo: GET
      URL: /api/productos
      Query Parameters Opcionales:
        - categoria: Filtrar por categor√≠a
        - min_precio: Precio m√≠nimo
        - max_precio: Precio m√°ximo
      Response: Lista de productos con filtros aplicados

   b) OBTENER PRODUCTO POR ID
      M√©todo: GET
      URL: /api/productos/<int:id>
      Response: Detalles del producto espec√≠fico

   c) CREAR PRODUCTO
      M√©todo: POST
      URL: /api/productos
      Body (JSON):
      {
        "nombre": "string (requerido)",
        "precio": "number (requerido)",
        "categoria": "string (requerido)",
        "stock": "integer (requerido)",
        "descripcion": "string (opcional)",
        "imagen": "string (opcional)",
        "rating": "number (opcional)"
      }
      Response: Producto creado

   d) ACTUALIZAR PRODUCTO
      M√©todo: PUT
      URL: /api/productos/<int:id>
      Body (JSON): Campos a actualizar
      Response: Producto actualizado

   e) ELIMINAR PRODUCTO
      M√©todo: DELETE
      URL: /api/productos/<int:id>
      Response: Mensaje de confirmaci√≥n

3. GESTI√ìN DE PEDIDOS
   ------------------

   a) LISTAR PEDIDOS
      M√©todo: GET
      URL: /api/pedidos
      Response: Lista de todos los pedidos

   b) OBTENER PEDIDO POR ID
      M√©todo: GET
      URL: /api/pedidos/<int:id>
      Response: Detalles del pedido espec√≠fico

   c) CREAR PEDIDO
      M√©todo: POST
      URL: /api/pedidos
      Body (JSON):
      {
        "cliente": {
          "nombre": "string",
          "email": "string"
        },
        "items": [
          {
            "producto_id": "integer (requerido)",
            "cantidad": "integer (requerido)"
          }
        ],
        "direccion_entrega": {
          "calle": "string",
          "ciudad": "string",
          "codigo_postal": "string"
        }
      }
      Response: Pedido creado con total calculado

4. GESTI√ìN DE USUARIOS
   -------------------

   a) REGISTRO DE USUARIO
      M√©todo: POST
      URL: /api/usuarios/registro
      Body (JSON):
      {
        "email": "string (requerido)",
        "password": "string (requerido)",
        "nombre": "string (requerido)",
        "direccion": "object (opcional)"
      }
      Response: Usuario registrado

   b) LOGIN DE USUARIO
      M√©todo: POST
      URL: /api/usuarios/login
      Body (JSON):
      {
        "email": "string (requerido)",
        "password": "string (requerido)"
      }
      Response: Datos del usuario y token de sesi√≥n (simulado)

C√ìDIGOS DE RESPUESTA HTTP:
-------------------------
- 200: OK - Operaci√≥n exitosa
- 201: Created - Recurso creado exitosamente
- 400: Bad Request - Datos inv√°lidos
- 401: Unauthorized - Autenticaci√≥n requerida
- 404: Not Found - Recurso no encontrado
- 409: Conflict - Recurso ya existe
- 500: Internal Server Error - Error del servidor

EJEMPLOS DE USO CON CURL:
=========================

# Obtener todos los productos
curl -X GET http://localhost:5000/api/productos

# Obtener productos de categor√≠a "Tecnolog√≠a"
curl -X GET "http://localhost:5000/api/productos?categoria=Tecnolog√≠a"

# Crear un nuevo producto
curl -X POST http://localhost:5000/api/productos \
  -H "Content-Type: application/json" \
  -d '{"nombre":"Tablet","precio":299.99,"categoria":"Tecnolog√≠a","stock":20}'

# Crear un pedido
curl -X POST http://localhost:5000/api/pedidos \
  -H "Content-Type: application/json" \
  -d '{
    "cliente": {"nombre":"Ana Lopez","email":"ana@example.com"},
    "items": [{"producto_id":1,"cantidad":1}],
    "direccion_entrega": {"calle":"Calle 123","ciudad":"Bogot√°"}
  }'

# Registrar usuario
curl -X POST http://localhost:5000/api/usuarios/registro \
  -H "Content-Type: application/json" \
  -d '{"email":"usuario@example.com","password":"clave123","nombre":"Usuario Ejemplo"}'